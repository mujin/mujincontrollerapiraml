#%RAML 1.0

title: MUJIN Controller API
baseUri: http://{controller}
baseUriParameters:
  controller: string
version: v1

traits:
  basicAuth:
    headers:
      Authorization:
        type: string
        example: Basic bXVqaW46bXVqaW4=
        required: true
  csrfToken:
    headers:
      X-CSRFToken:
        type: string
        example: token
        required: true
      Cookie:
        type: string
        example: csrftoken=token
        required: true

types:
  Meta:
    type: object
    properties:
      total_count: integer
      limit: integer
      offset: integer
      previous: string | nil
      next: string | nil
  DebugResource:
    type: object
    properties:
      pk: string
      resource_uri: string
      description: string
      name: string
      downloadUri: string
      datemodified: string
      size: integer

  CollectionResource: !include schemas/collection.schema
  SceneResource: !include schemas/scene.schema
  ObjectResource: !include schemas/object.schema
  LinkResource: !include schemas/link.schema
  AttachmentResource: !include schemas/attachment.schema
  GeometryResource: !include schemas/geometry.schema
  IkParamResource: !include schemas/ikparam.schema
  GraspsetResource: !include schemas/graspset.schema
  RobotResource: !include schemas/robot.schema
  ToolResource: !include schemas/tool.schema
  AttachedSensorResource: !include schemas/attachedsensor.schema
  InstObjectResponse: !include schemas/instobject.schema
  InstObjectToolResource: !include schemas/instobjecttool.schema

resourceTypes:
  CollectionListResource:
    is: [basicAuth]
    get:
      description: |
        Retrieves <<resourcePathName>> list.
        Note that list contents can be filtered based on query parameters, i.e. modifying the header "fields" value.
        Refer to the "properties" section in the schema below for valid filters.
        Returns JSON response containing resource list.
      body:
        application/json:
          type: <<resourceSchema>>
      responses:
        200:
          body:
            application/json:
              type: CollectionResource
    post:
      description: |
        Creates a new <<resourcePathName|!singularize>> and add to <<resourcePathName>> list.
        Request requires users to send JSON-serialized dictionary containing parameters for resource initialization.
        Refer to the "properties" section in the schema below for necessary and/or valid parameters for intialization.
        The following parameters are required for a minimally-defined resource: <<minimumParametersList>>
        Returns JSON response containing updated JSON representation of <<resourcePathName>> list.
      is: [csrfToken]
      body:
        application/json:
          type: <<resourceSchema>>
      responses:
        201:
          body:
            application/json:
              type: CollectionResource
    delete:
      description: |
        Deletes specific resource using <<resourcePathName|!singularize>>pk.
        Note that user is not required to send any JSON-serialized dictionary and also does not receive JSON response.
      is: [csrfToken]
      responses: 204

  CollectionItemResource:
    is: [basicAuth]
    get:
      description: |
        Retrieves specific resource with <<resourcePathName|!singularize>>pk.
        Note that list contents can be filtered based on query parameters, i.e. modifying the headers.
        Refer to the "properties" section in the schema below for valid filters.
        Returns JSON representation of <<resourcePathName|!singularize>>pk of requested resource.
      body:
        application/json:
          type: <<resourceSchema>>
      responses:
        200:
          body:
            application/json:
              type: <<resourceSchema>>
    put:
      description: |
        Modifies specific resource <<resourcePathName|!singularize>> using <<resourcePathName|!singularize>>pk.
        Request requires users to send JSON-serialized dictionary containing parameters for resource modification.
        Refer to the "properties" section in the schema below for resource parameters that can be modified.
        Returns updated JSON representation of <<resourcePathName|!singularize>>pk after modification.
      is: [csrfToken]
      body:
        application/json:
          type: <<resourceSchema>>
      responses:
        202:
          body:
            application/json:
              type: <<resourceSchema>>

  ReadModifyOnlyItemResource:
    is: [basicAuth]
    get:
      description: |
        Retrieves specific resource with <<resourcePathName|!singularize>>pk.
        Note that list contents can be filtered based on query parameters, i.e. modifying the headers.
        Refer to the "properties" section in the schema below for valid filters.
        Returns JSON representation of <<resourcePathName|!singularize>>pk of requested resource.
      body:
        application/json:
          type: <<resourceSchema>>
      responses:
        200:
          body:
            application/json:
              type: <<resourceSchema>>
    put:
      description: |
        Modifies specific resource <<resourcePathName|!singularize>> using <<resourcePathName|!singularize>>pk.
        Request requires users to send JSON-serialized dictionary containing parameters for resource modification.
        Refer to the "properties" section in the schema below for resource parameters that can be modified.
        Returns updated JSON representation of <<resourcePathName|!singularize>>pk after modification.
      is: [csrfToken]
      body:
        application/json:
          type: <<resourceSchema>>
      responses:
        202:
          body:
            application/json:
              type: <<resourceSchema>>

/systeminfo/:
  is: [basicAuth]
  get:
    responses:
      200:
        body:
          application/json:
            type: object
            properties:
              hardware: string
              product: string
              id: string
            example: |
              {
                "hardware": "HARDWARE-MODEL",
                "product": "PRODUCT-ID",
                "id": "controller"
              }

/systemstats/:
  is: [basicAuth]
  get:
    responses:
      200:
        body:
          application/json:
            type: object
            properties:
              memory: object
              disk: object
              temperature: object[]
              cpu: object

/interfaces/:
  is: [basicAuth]
  get:
    responses:
      200:
        body:
          application/json:

/upgrade/:
  is: [basicAuth]
  get:
    responses:
      200:
  post:
    is: [csrfToken]
    responses:
      200:
  delete:
    is: [csrfToken]
    responses:
      200:

/reboot/:
  is: [basicAuth]
  post:
    is: [csrfToken]
    responses:
      200:

/halt/:
  is: [basicAuth]
  post:
    is: [csrfToken]
    responses:
      200:

/restartserver/:
  is: [basicAuth]
  post:
    is: [csrfToken]
    responses:
      200:

/log/ordercycle/:
  is: [basicAuth]
  get:

/log/plcsignal/:
  is: [basicAuth]
  get:

/log/plcsignalanalysis/:
  is: [basicAuth]
  get:

/log/user/{category}/:
  is: [basicAuth]
  get:

/config/:
  is: [basicAuth]
  get:
  put:
    is: [csrfToken]

/signalmap:
  is: [basicAuth]
  /:
    get:
  /{pk}/:
    get:
    put:
      is: [csrfToken]
    delete:
      is: [csrfToken]

/backup/:
  is: [basicAuth]
  get:
  post:
    is: [csrfToken]

/query/barcodes/:
  is: [basicAuth]
  get:

/referenceobjectpks/:
  is: [basicAuth]
  post:
    is: [csrfToken]

/file:
  /upload/:
    is: [basicAuth]
    post:
      is: [csrfToken]
      queryParameters:
        filename?: string
      body:
        multipart/form-data:
          properties:
            filename?: string
            file:
              required: true
              type: file
      responses:
        200:
          body:
            application/json:
              type: object
              properties:
                filename: string
                modified: number
                size: integer
  /delete/:
    is: [basicAuth]
    post:
      is: [csrfToken]
      queryParameters:
        filename: string
      responses:
        200:
          body:
            application/json:
              type: object
              properties:
                filename: string
  /list/:
    is: [basicAuth]
    get:
      responses:
        200:
          body:
            application/json:
              type: object
              properties:
                filename?:
                  type: object
                  properties:
                    modified: number
                    size: integer
              example: |
                {
                  "filename1.mujin.dae": {
                    "modified": 1565932929.9884703,
                    "size": 9938
                  }
                }
  /download/:
    is: [basicAuth]
    get:
      queryParameters:
        filename: string
      responses:
        302:
    head:
      queryParameters:
        filename: string
      responses:
        302:

/api/v1/:
  is: [basicAuth]
  get:
    responses:
      200:
        body:
          application/json:

/api/v1/debug:
  is: [basicAuth]
  /:
    get:
      responses:
        200:
          body:
            application/json:
              type: object
              properties:
                objects: DebugResource[]
                meta: Meta
              example: |
                {
                  "objects": [
                    {
                      "description": "System logs",
                      "name": "system-logs",
                      "downloadUri": "/api/v1/debug/system-logs/download/",
                      "pk": "system-logs",
                      "resource_uri": "/api/v1/debug/system-logs/",
                      "datemodified": "2020-03-19T15:07:42.633247+09:00",
                      "size": 125289232
                    }
                  ],
                  "meta": {
                    "total_count": 1,
                    "previous": null,
                    "limit": 20,
                    "offset": 0,
                    "next": null
                  }
                }
  /{pk}/:
    get:
      responses:
        200:
          body:
            application/json:
              type: DebugResource
              example:
                {
                  "description": "System logs",
                  "name": "system-logs",
                  "downloadUri": "/api/v1/debug/system-logs/download/",
                  "pk": "system-logs",
                  "resource_uri": "/api/v1/debug/system-logs/",
                  "datemodified": "2020-03-19T15:07:42.633247+09:00",
                  "size": 125289232
                }

/api/v1/profile/:
  is: [basicAuth]
  get:
    responses:
      200:
        body:
          application/json:

/api/v1/ui/:
  is: [basicAuth]
  get:
    responses:
      200:
        body:
          application/json:

  post:
    is: [csrfToken]
    responses:
      200:
        body:
          application/json:

/api/v1/task:
  is: [basicAuth]
  /:
    get:
      responses:
        200:
          body:
            application/json:
    post:
      is: [csrfToken]
      responses:
        201:
          body:
            application/json:
  /{pk}/:
    get:
      responses:
        200:
          body:
            application/json:
    put:
      is: [csrfToken]
      responses:
        202:
          body:
            application/json:
    delete:
      is: [csrfToken]
      responses:
        204:

/api/v1/job:
  is: [basicAuth]
  /:
    get:
      responses:
        200:
          body:
            application/json:
    post:
      is: [csrfToken]
      responses:
        201:
          body:
            application/json:
  /{pk}/:
    get:
      responses:
        200:
          body:
            application/json:
    put:
      is: [csrfToken]
      responses:
        202:
          body:
            application/json:
    delete:
      is: [csrfToken]
      responses:
        204:

/api/v1/planningresult:
  is: [basicAuth]
  /:
    get:
      responses:
        200:
          body:
            application/json:
    post:
      is: [csrfToken]
      responses:
        201:
          body:
            application/json:
  /{pk}/:
    get:
      responses:
        200:
          body:
            application/json:
    put:
      is: [csrfToken]
      responses:
        202:
          body:
            application/json:
    delete:
      is: [csrfToken]
      responses:
        204:

/api/v1/binpickingresult:
  is: [basicAuth]
  /:
    get:
      responses:
        200:
          body:
            application/json:
    post:
      is: [csrfToken]
      responses:
        201:
          body:
            application/json:
  /{pk}/:
    get:
      responses:
        200:
          body:
            application/json:
    put:
      is: [csrfToken]
      responses:
        202:
          body:
            application/json:
    delete:
      is: [csrfToken]
      responses:
        204:

/api/v1/controllerState:
  is: [basicAuth]
  /:
    get:
      responses:
        200:
          body:
            application/json:
    post:
      is: [csrfToken]
      responses:
        201:
          body:
            application/json:
  /{pk}/:
    get:
      responses:
        200:
          body:
            application/json:
    put:
      is: [csrfToken]
      responses:
        202:
          body:
            application/json:
    delete:
      is: [csrfToken]
      responses:
        204:

/api/v1/cycleLog:
  is: [basicAuth]
  /:
    get:
      responses:
        200:
          body:
            application/json:
    post:
      is: [csrfToken]
      responses:
        201:
          body:
            application/json:
  /{pk}/:
    get:
      responses:
        200:
          body:
            application/json:
    put:
      is: [csrfToken]
      responses:
        202:
          body:
            application/json:
    delete:
      is: [csrfToken]
      responses:
        204:

/api/v1/itl:
  is: [basicAuth]
  /:
    get:
      responses:
        200:
          body:
            application/json:
    post:
      is: [csrfToken]
      responses:
        201:
          body:
            application/json:
  /{pk}/:
    get:
      responses:
        200:
          body:
            application/json:
    put:
      is: [csrfToken]
      responses:
        202:
          body:
            application/json:
    delete:
      is: [csrfToken]
      responses:
        204:

/api/v1/scene:
  description: |
    This endpoint contains the scene that holds the robot(s), the source and destination containers, and the workpiece(s).

  /:
    type:
      CollectionListResource:

  /{scenepk}/:
    type:
      CollectionItemResource:
        resourceSchema: SceneResource

/api/v1/scene/{scenepk}/instobject:
  type: CollectionListResource
  /{instobjectpk}/:
    type:
      CollectionItemResource:
        resourceDescription: TODO...testing...
        resourceSchema: InstObjectResponse
        resourceSchemaExample: !include examples/instobject.sample

/api/v1/scene/{scenepk}/instobject/{instobjectpk}/tool:
  type: CollectionListResource:
  /{toolpk}/:
    type:
      CollectionItemResource:
        resourceDescription: TODO...
        resourceSchema: InstObjectToolResource
        resourceSchemaExample: !include examples/instobjecttool.sample

/api/v1/object/{objectpk}:
  type:
    ReadModifyOnlyItemResource:
      resourceDescription: TODO...
      resourceSchema: ObjectResponse
      resourceSchemaExample: !include examples/object.sample

/api/v1/object/{objectpk}/link:
  type: CollectionListResource
  /{linkpk}/:
    type:
      CollectionItemResource:
        resourceDescription: TODO...
        resourceSchema: LinkResource
        resourceSchemaExample: !include examples/link.sample

/api/v1/object/{objectpk}/attachment:
  type: CollectionListResource
  /{attachmentpk}/:
    type:
      CollectionItemResource:
        resourceDescription: TODO...
        resourceSchema: AttachmentResource
        resourceSchemaExample: !include examples/attachment.sample

/api/v1/object/{objectpk}/geometry:
  type: CollectionListResource
  /{geometrypk}/:
    type:
      CollectionItemResource:
        resourceDescription: TODO...
        resourceSchema: GeometryResource
        resourceSchemaExample: !include examples/geometry.sample
    
/api/v1/object/{objectpk}/ikparam:
  type: CollectionListResource
  /{ikparampk}/:
    type:
      CollectionItemResource:
        resourceDescription: TODO...
        resourceSchema: IkParamResource
        resourceSchemaExample: !include examples/ikparam.sample

/api/v1/object/{objectpk}/graspset:
  type: CollectionListResource
  /{graspsetpk}/:
    type:
      CollectionItemResource:
        resourceDescription: TODO...
        resourceSchema: GraspsetResource
        resourceSchemaExample: !include examples/graspset.sample
    
/api/v1/robot/{robotpk}/:
  type:
    ReadModifyOnlyItemResource:
      resourceDescription: TODO...
      resourceSchema: RobotResource
      resourceSchemaExample: !include examples/robot.sample
    
/api/v1/robot/{robotpk}/tool:
  type: CollectionListResource
  /{toolpk}/:
    type:
      CollectionItemResource:
        resourceDescription: TODO...
        resourceSchema: ToolResource
        resourceSchemaExample: !include examples/tool.sample

/api/v1/robot/{robotpk}/attachedsensor:
  type: CollectionListResource
  /{attachedsensorpk}/:
    type:
      CollectionItemResource:
        resourceDescription: TODO...
        resourceSchema: AttachedSensorResource
        resourceSchemaExample: !include examples/attachedsensor.sample