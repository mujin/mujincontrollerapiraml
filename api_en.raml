#%RAML 1.0 Overlay
masterRef: api.raml
title: MUJIN Controller API
description: |
  This document describes the HTTP API to interact with a MUJIN controller.

baseUriParameters:
  controller:
    description: Hostname or IP address of MUJIN controller

documentation:
  - title: URL
    content: |
      This API is based on HTTP protocol and can be accessed at port `80` on the controller. The URL for API access is any one of the following:

      - `http://controller123/api/v1/` where `controller123` is the controller name, this method will not work if DNS is not set up properly to resolve hostnames on the network
      - `http://192.168.0.1/api/v1/` where `192.168.0.1` is the IP address of the controller, this can be determined through the user interface of the controller

      You can try these method in a web browser, the web browser will prompt for username and password before allowing access. See the next section for details on how to authenticate when using this API.
  - title: Authentication
    content: |
      To use this API, client side software need to use **Basic authentication** to authenticate with HTTP server on the controller. This can be done by supplying the following HTTP header to the request:

      ```
      Authorization: Basic bXVqaW46bXVqaW4=
      ```

      Where `bXVqaW46bXVqaW4=` is a base64 string, encoding the username and password separated by a `:`, in this case `mujin:mujin`

traits:
  basicAuth:
    description: Authorization credentials encoded with base64
    headers:
      Authorization:
        displayName: Authorization credentials encoded with base64

types:
  Meta:
    properties:
      total_count:
        description: Total number of entries
      limit:
        description: Maximum number of entries to retrieve, used for pagination
      offset:
        description: Offset into the list of entries, used for pagination
      previous:
        description: Relative URI to fetch the previous page
      next:
        description: Relative URI to fetch the next page
  DebugResource:
    properties:
      pk:
        description: Primary key of debug resource
      resource_uri:
        description: Relative URI of debug resource
      description:
        description: Description of debug resource
      name:
        description: Name of debug resource, same as `pk`
      downloadUri:
        description: Relative URI to download debug resource
      datemodified:
        description: Timestamp of last modification
      size:
        description: Size of the debug resource, hint for downloading
  CollectionResource:
    objects:
      description:

/systeminfo/:
  displayName: System information

/systemstats/:
  displayName: System statistics

/interfaces/:
  displayName: Network interfaces

/upgrade/:
  displayName: Upgrade controller

/reboot/:
  displayName: Reboot controller

/halt/:
  displayName: Shutdown controller

/restartserver/:
  displayName: Restart planning server

/log/ordercycle/:
  displayName: Retrieve order cycle log (DEPRECATED)

/log/plcsignal/:
  displayName: Retrieve PLC signal log

/log/plcsignalanalysis/:
  displayName: Analayze PLC signal timing

/log/user/{category}/:
  displayName: Retrieve user logs

/config/:
  displayName: Configuration files

/signalmap:
  displayName: PLC signal maps

/backup/:
  displayName: Backup and restore

/query/barcodes/:
  displayName: Query scene based on barcode

/referenceobjectpks/:
  displayName: Manage referenced objects

/file:
  displayName: File management
  /upload/:
    post:
      displayName: Upload a file to controller
  /delete/:
    post:
      displayName: Delete a file on controller
  /list/:
    get:
      displayName: List files on controller
  /download/:
    get:
      displayName: Download a file from controller
    head:
      displayName: Peek at file metadata without downloading content

/api/v1/debug:
  displayName: Debug logs

/api/v1/scene:
  displayName: Modify simulation scene
  description: |
    This endpoint contains the scene that holds the robot(s), the source and destination containers, and the workpiece(s).
  /:
    get:
      description: |
        Returns JSON response containing resource list.
        List contents can be filtered based on query parameters.
        Refer to the "properties" section in the schema below for valid filters.        
  /{scenepk}/:


/api/v1/scene/{scenepk}/instobject:
  /:

  /{instobjectpk}/:


/api/v1/scene/{scenepk}/instobject/{instobjectpk}/tool:
  /:


/api/v1/object/{objectpk}:
  /:


/api/v1/object/{objectpk}/link:
  /:

  /{linkpk}/:


/api/v1/object/{objectpk}/attachment:
  /:

  /{attachmentpk}/:


/api/v1/object/{objectpk}/geometry:
  /:

  /{geometrypk}/:


/api/v1/object/{objectpk}/ikparam:
  /:

  /{ikparampk}/:


/api/v1/object/{objectpk}/graspset:
  /:

  /{graspsetpk}/:


/api/v1/robot/{robotpk}:
  /:


/api/v1/robot/{robotpk}/tool:
  /:

  /{toolpk}/:


/api/v1/robot/{robotpk}/attachedsensor:
  /:

  /{attachedsensorpk}/:
